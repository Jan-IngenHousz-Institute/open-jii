name: PR Workflow; Build, Lint, Test & Tofu Validation

on:
  pull_request_target:
    types:
      - opened
      - edited
      - synchronize
      - reopened
  workflow_dispatch:

permissions:
  pull-requests: read

jobs:
  validate_pr:
    name: Validate PR title
    runs-on: ubuntu-latest
    steps:
      - uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_lint_test:
    name: Build, Lint, Test & AsyncAPI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set TURBO_REF_FILTER
        run: |
          DEFAULT_REF="main"
          BASE_REF="${{ github.base_ref }}"
          if [ -z "$BASE_REF" ]; then
            echo "TURBO_REF_FILTER=origin/$DEFAULT_REF" >> $GITHUB_ENV
          else
            echo "TURBO_REF_FILTER=origin/$BASE_REF" >> $GITHUB_ENV
          fi

      - name: Build, Lint & Test
        id: blt
        uses: ./.github/actions/blt
        with:
          node-version: "22"
          artifact_retention: "7"
          base: "main"
          environment: "dev"

  tofu:
    name: OpenTofu
    needs: build_lint_test
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      TF_VAR_terraform_state_s3_bucket_name: ${{ secrets.TERRAFORM_STATE_S3_BUCKET_NAME }}
      TF_VAR_docusaurus_s3_bucket_name: ${{ secrets.DOCUSAURUS_S3_BUCKET_NAME }}
      TF_VAR_databricks_bucket_name: ${{ secrets.DATABRICKS_S3_BUCKET_NAME }}
      TF_VAR_timestream_database_name: ${{ secrets.TIMESTREAM_DB_NAME }}
      TF_VAR_timestream_table_name: ${{ secrets.TIMESTREAM_TABLE_NAME }}
      TF_VAR_iot_timestream_policy_name: ${{ secrets.IOT_TIMESTREAM_POLICY_NAME }}
      TF_VAR_iot_timestream_role_name: ${{ secrets.IOT_TIMESTREAM_ROLE_NAME }}
      TF_VAR_iot_kinesis_policy_name: ${{ secrets.IOT_KINESIS_POLICY_NAME }}
      TF_VAR_iot_kinesis_role_name: ${{ secrets.IOT_KINESIS_ROLE_NAME }}
      TF_VAR_kinesis_stream_name: ${{ secrets.KINESIS_STREAM_NAME }}
      TF_VAR_databricks_account_id: ${{ secrets.DATABRICKS_ACCOUNT_ID }}
      TF_VAR_databricks_client_id: ${{ secrets.DATABRICKS_CLIENT_ID }}
      TF_VAR_databricks_client_secret: ${{ secrets.DATABRICKS_CLIENT_SECRET }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run OpenTofu Operations
        uses: ./.github/actions/tofu
        with:
          aws_role_arn: ${{ secrets.AWS_ROLE_ARN }}
          aws_region: ${{ secrets.AWS_REGION }}
          tofu_version: "1.9.0"
          environment: "dev"
