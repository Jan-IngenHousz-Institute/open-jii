name: Deployment Template

on:
  workflow_call:
    inputs:
      environment:
        description: "The deployment environment"
        required: true
        type: string

# Job 1: Build, Lint, Test & AsyncAPI
jobs:
  build_lint_test:
    name: Build, Lint, Test & AsyncAPI
    runs-on: ubuntu-latest
    steps:
      - name: Run Build, Lint, Test & AsyncAPI
        id: build
        uses: ./github/actions/build-lint-test
        with:
          node-version: "22"

      - name: Debug Outputs
        run: |
          echo "Docs built: ${{ env.docs_built }}"
          echo "API built: ${{ env.api_built }}"
          echo "Frontend built: ${{ env.frontend_built }}"

  # Job 2: Terraform (Plan & Apply)
  tofu:
    name: OpenTofu
    needs: build_lint_test
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      TF_VAR_terraform_state_s3_bucket_name: ${{ secrets.TERRAFORM_STATE_S3_BUCKET_NAME }}
      TF_VAR_docusaurus_s3_bucket_name: ${{ secrets.DOCUSAURUS_S3_BUCKET_NAME }}
      TF_VAR_databricks_bucket_name: ${{ secrets.DATABRICKS_S3_BUCKET_NAME }}
      TF_VAR_timestream_database_name: ${{ secrets.TIMESTREAM_DB_NAME }}
      TF_VAR_timestream_table_name: ${{ secrets.TIMESTREAM_TABLE_NAME }}
      TF_VAR_iot_timestream_policy_name: ${{ secrets.IOT_TIMESTREAM_POLICY_NAME }}
      TF_VAR_iot_timestream_role_name: ${{ secrets.IOT_TIMESTREAM_ROLE_NAME }}
      TF_VAR_iot_kinesis_policy_name: ${{ secrets.IOT_KINESIS_POLICY_NAME }}
      TF_VAR_iot_kinesis_role_name: ${{ secrets.IOT_KINESIS_ROLE_NAME }}
      TF_VAR_kinesis_stream_name: ${{ secrets.KINESIS_STREAM_NAME }}
      TF_VAR_databricks_account_id: ${{ secrets.DATABRICKS_ACCOUNT_ID }}
      TF_VAR_databricks_client_id: ${{ secrets.DATABRICKS_CLIENT_ID }}
      TF_VAR_databricks_client_secret: ${{ secrets.DATABRICKS_CLIENT_SECRET }}
    steps:
      - name: Run OpenTofu Operations
        uses: ./github/actions/tofu
        with:
          tofu-version: "1.6.0"
          environment: "${{ inputs.environment }}"

      - name: Apply Infrastructure
        run: tofu apply -auto-approve

  # Job 3: Deploy Artifacts
  deploy:
    name: Deploy Artifacts
    needs: [build_lint_test, tofu]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Download Docs Artifact
        if: needs.build_lint_test.outputs.docs_built == 'true'
        uses: actions/download-artifact@v3
        with:
          name: docs-artifact

      - name: Deploy Docs Artifact to S3
        if: needs.build_lint_test.outputs.docs_built == 'true'
        run: |
          echo "Deploying docs from artifact..."
          aws s3 cp docs-artifact s3://${{ secrets.S3_BUCKET_NAME }}/docs --recursive
