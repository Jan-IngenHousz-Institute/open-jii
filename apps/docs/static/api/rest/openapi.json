{
  "openapi": "3.0.2",
  "paths": {
    "/api/v1/experiments": {
      "post": {
        "description": "Creates a new experiment with the provided configuration",
        "summary": "Create a new experiment",
        "tags": [
          "experiments"
        ],
        "parameters": [],
        "operationId": "experiments.createExperiment",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100,
                    "description": "The name of the experiment"
                  },
                  "description": {
                    "type": "string",
                    "description": "Optional description of the experiment"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "provisioning",
                      "provisioning_failed",
                      "active",
                      "stale",
                      "archived",
                      "published"
                    ],
                    "description": "Initial status of the experiment"
                  },
                  "visibility": {
                    "type": "string",
                    "enum": [
                      "private",
                      "public"
                    ],
                    "description": "Experiment visibility setting"
                  },
                  "embargoIntervalDays": {
                    "type": "integer",
                    "description": "Embargo period in days"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Returns a list of experiments based on the specified filter criteria",
        "summary": "List experiments",
        "tags": [
          "experiments"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter experiments by relationship to the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "my",
                    "member",
                    "related"
                  ]
                }
              }
            }
          }
        ],
        "operationId": "experiments.listExperiments",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string",
                        "nullable": true
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "provisioning",
                          "provisioning_failed",
                          "active",
                          "stale",
                          "archived",
                          "published"
                        ]
                      },
                      "visibility": {
                        "type": "string",
                        "enum": [
                          "private",
                          "public"
                        ]
                      },
                      "embargoIntervalDays": {
                        "type": "integer"
                      },
                      "createdBy": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "description",
                      "status",
                      "visibility",
                      "embargoIntervalDays",
                      "createdBy",
                      "createdAt"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/experiments/{id}": {
      "get": {
        "description": "Returns detailed information about a specific experiment",
        "summary": "Get experiment details",
        "tags": [
          "experiments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the experiment"
          }
        ],
        "operationId": "experiments.getExperiment",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "provisioning",
                        "provisioning_failed",
                        "active",
                        "stale",
                        "archived",
                        "published"
                      ]
                    },
                    "visibility": {
                      "type": "string",
                      "enum": [
                        "private",
                        "public"
                      ]
                    },
                    "embargoIntervalDays": {
                      "type": "integer"
                    },
                    "createdBy": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "description",
                    "status",
                    "visibility",
                    "embargoIntervalDays",
                    "createdBy",
                    "createdAt"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Updates an existing experiment with the provided changes",
        "summary": "Update experiment",
        "tags": [
          "experiments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the experiment"
          }
        ],
        "operationId": "experiments.updateExperiment",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100,
                    "description": "Updated experiment name"
                  },
                  "description": {
                    "type": "string",
                    "description": "Updated experiment description"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "provisioning",
                      "provisioning_failed",
                      "active",
                      "stale",
                      "archived",
                      "published"
                    ],
                    "description": "Updated experiment status"
                  },
                  "visibility": {
                    "type": "string",
                    "enum": [
                      "private",
                      "public"
                    ],
                    "description": "Updated visibility setting"
                  },
                  "embargoIntervalDays": {
                    "type": "integer",
                    "description": "Updated embargo period in days"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "provisioning",
                        "provisioning_failed",
                        "active",
                        "stale",
                        "archived",
                        "published"
                      ]
                    },
                    "visibility": {
                      "type": "string",
                      "enum": [
                        "private",
                        "public"
                      ]
                    },
                    "embargoIntervalDays": {
                      "type": "integer"
                    },
                    "createdBy": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "description",
                    "status",
                    "visibility",
                    "embargoIntervalDays",
                    "createdBy",
                    "createdAt"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletes an experiment and all associated data",
        "summary": "Delete experiment",
        "tags": [
          "experiments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the experiment"
          }
        ],
        "operationId": "experiments.deleteExperiment",
        "responses": {
          "204": {
            "description": "204"
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/experiments/{id}/members": {
      "get": {
        "description": "Returns a list of all users who are members of the specified experiment",
        "summary": "List experiment members",
        "tags": [
          "experiments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the experiment"
          }
        ],
        "operationId": "experiments.listExperimentMembers",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "userId": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "role": {
                        "type": "string",
                        "enum": [
                          "admin",
                          "member"
                        ]
                      },
                      "joinedAt": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "required": [
                      "id",
                      "userId",
                      "role",
                      "joinedAt"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Adds a new member to the experiment with the specified role",
        "summary": "Add experiment member",
        "tags": [
          "experiments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the experiment"
          }
        ],
        "operationId": "experiments.addExperimentMember",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID of the user to add as a member"
                  },
                  "role": {
                    "default": "member",
                    "type": "string",
                    "enum": [
                      "admin",
                      "member"
                    ],
                    "description": "Role to assign to the new member"
                  }
                },
                "required": [
                  "userId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "userId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "admin",
                        "member"
                      ]
                    },
                    "joinedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "id",
                    "userId",
                    "role",
                    "joinedAt"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/experiments/{id}/members/{memberId}": {
      "delete": {
        "description": "Removes a member from the experiment",
        "summary": "Remove experiment member",
        "tags": [
          "experiments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the experiment"
          },
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the member"
          }
        ],
        "operationId": "experiments.removeExperimentMember",
        "responses": {
          "204": {
            "description": "204"
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/signin": {
      "get": {
        "tags": [
          "auth"
        ],
        "parameters": [],
        "operationId": "auth.signInPage",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/signin/{provider}": {
      "post": {
        "tags": [
          "auth"
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "auth.signIn",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "csrfToken": {
                    "type": "string"
                  },
                  "callbackUrl": {
                    "type": "string"
                  },
                  "json": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "csrfToken"
                ]
              }
            }
          }
        },
        "responses": {
          "302": {
            "description": "302",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "url"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/callback/{provider}": {
      "get": {
        "tags": [
          "auth"
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "auth.callback",
        "responses": {
          "307": {
            "description": "307",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "url"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/signout": {
      "get": {
        "tags": [
          "auth"
        ],
        "parameters": [],
        "operationId": "auth.signOutPage",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "auth"
        ],
        "parameters": [],
        "operationId": "auth.signOut",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "csrfToken": {
                    "type": "string"
                  }
                },
                "required": [
                  "csrfToken"
                ]
              }
            }
          }
        },
        "responses": {
          "302": {
            "description": "302",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "url"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/session": {
      "get": {
        "tags": [
          "auth"
        ],
        "parameters": [],
        "operationId": "auth.session",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "nullable": true
                        },
                        "email": {
                          "type": "string",
                          "nullable": true
                        },
                        "image": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "expires": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "expires"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/csrf": {
      "get": {
        "tags": [
          "auth"
        ],
        "parameters": [],
        "operationId": "auth.csrf",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "csrfToken": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "csrfToken"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/providers": {
      "get": {
        "tags": [
          "auth"
        ],
        "parameters": [],
        "operationId": "auth.providers",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/error": {
      "get": {
        "tags": [
          "auth"
        ],
        "parameters": [
          {
            "name": "error",
            "in": "query",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "operationId": "auth.error",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "info": {
    "title": "OpenJII API",
    "version": "1.0.0",
    "description": "REST API documentation for the OpenJII platform"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local development"
    }
  ]
}