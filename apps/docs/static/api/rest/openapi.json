{
  "openapi": "3.0.2",
  "paths": {
    "/api/v1/experiments": {
      "post": {
        "description": "Creates a new experiment with the provided configuration",
        "summary": "Create a new experiment",
        "tags": ["experiments"],
        "parameters": [],
        "operationId": "experiments.createExperiment",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "description": "The name of the experiment"
                  },
                  "description": {
                    "type": "string",
                    "description": "Optional description of the experiment"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "provisioning",
                      "provisioning_failed",
                      "active",
                      "stale",
                      "archived",
                      "published"
                    ],
                    "description": "Initial status of the experiment"
                  },
                  "visibility": {
                    "type": "string",
                    "enum": ["private", "public"],
                    "description": "Experiment visibility setting"
                  },
                  "embargoIntervalDays": {
                    "type": "integer",
                    "minimum": 0,
                    "exclusiveMinimum": 0,
                    "description": "Embargo period in days"
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "role": {
                          "type": "string",
                          "enum": ["admin", "member"]
                        }
                      },
                      "required": ["userId"]
                    },
                    "description": "Optional array of member objects with userId and role"
                  }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "required": ["id"]
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Returns a list of experiments based on the specified filter criteria",
        "summary": "List experiments",
        "tags": ["experiments"],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter experiments by relationship to the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": ["my", "member", "related"]
                }
              }
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter experiments by their status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "provisioning",
                    "provisioning_failed",
                    "active",
                    "stale",
                    "archived",
                    "published"
                  ]
                }
              }
            }
          }
        ],
        "operationId": "experiments.listExperiments",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string",
                        "nullable": true
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "provisioning",
                          "provisioning_failed",
                          "active",
                          "stale",
                          "archived",
                          "published"
                        ]
                      },
                      "visibility": {
                        "type": "string",
                        "enum": ["private", "public"]
                      },
                      "embargoIntervalDays": {
                        "type": "integer"
                      },
                      "createdBy": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "columns": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "type_name": {
                                  "type": "string"
                                },
                                "type_text": {
                                  "type": "string"
                                }
                              },
                              "required": ["name", "type_name", "type_text"]
                            }
                          },
                          "rows": {
                            "type": "array",
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "nullable": true
                              }
                            }
                          },
                          "totalRows": {
                            "type": "integer"
                          },
                          "truncated": {
                            "type": "boolean"
                          }
                        },
                        "required": ["columns", "rows", "totalRows", "truncated"]
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "description",
                      "status",
                      "visibility",
                      "embargoIntervalDays",
                      "createdBy",
                      "createdAt",
                      "updatedAt"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/experiments/{id}": {
      "get": {
        "description": "Returns detailed information about a specific experiment",
        "summary": "Get experiment details",
        "tags": ["experiments"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the experiment"
          }
        ],
        "operationId": "experiments.getExperiment",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "provisioning",
                        "provisioning_failed",
                        "active",
                        "stale",
                        "archived",
                        "published"
                      ]
                    },
                    "visibility": {
                      "type": "string",
                      "enum": ["private", "public"]
                    },
                    "embargoIntervalDays": {
                      "type": "integer"
                    },
                    "createdBy": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "columns": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "type_name": {
                                "type": "string"
                              },
                              "type_text": {
                                "type": "string"
                              }
                            },
                            "required": ["name", "type_name", "type_text"]
                          }
                        },
                        "rows": {
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "nullable": true
                            }
                          }
                        },
                        "totalRows": {
                          "type": "integer"
                        },
                        "truncated": {
                          "type": "boolean"
                        }
                      },
                      "required": ["columns", "rows", "totalRows", "truncated"]
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "description",
                    "status",
                    "visibility",
                    "embargoIntervalDays",
                    "createdBy",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Updates an existing experiment with the provided changes",
        "summary": "Update experiment",
        "tags": ["experiments"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the experiment"
          }
        ],
        "operationId": "experiments.updateExperiment",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "description": "Updated experiment name"
                  },
                  "description": {
                    "type": "string",
                    "description": "Updated experiment description"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "provisioning",
                      "provisioning_failed",
                      "active",
                      "stale",
                      "archived",
                      "published"
                    ],
                    "description": "Updated experiment status"
                  },
                  "visibility": {
                    "type": "string",
                    "enum": ["private", "public"],
                    "description": "Updated visibility setting"
                  },
                  "embargoIntervalDays": {
                    "type": "integer",
                    "description": "Updated embargo period in days"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "provisioning",
                        "provisioning_failed",
                        "active",
                        "stale",
                        "archived",
                        "published"
                      ]
                    },
                    "visibility": {
                      "type": "string",
                      "enum": ["private", "public"]
                    },
                    "embargoIntervalDays": {
                      "type": "integer"
                    },
                    "createdBy": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "columns": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "type_name": {
                                "type": "string"
                              },
                              "type_text": {
                                "type": "string"
                              }
                            },
                            "required": ["name", "type_name", "type_text"]
                          }
                        },
                        "rows": {
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "nullable": true
                            }
                          }
                        },
                        "totalRows": {
                          "type": "integer"
                        },
                        "truncated": {
                          "type": "boolean"
                        }
                      },
                      "required": ["columns", "rows", "totalRows", "truncated"]
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "description",
                    "status",
                    "visibility",
                    "embargoIntervalDays",
                    "createdBy",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletes an experiment and all associated data",
        "summary": "Delete experiment",
        "tags": ["experiments"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the experiment"
          }
        ],
        "operationId": "experiments.deleteExperiment",
        "responses": {
          "204": {
            "description": "204"
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/experiments/{id}/members": {
      "get": {
        "description": "Returns a list of all users who are members of the specified experiment",
        "summary": "List experiment members",
        "tags": ["experiments"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the experiment"
          }
        ],
        "operationId": "experiments.listExperimentMembers",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "name": {
                            "type": "string",
                            "nullable": true
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "nullable": true
                          }
                        },
                        "required": ["id", "name", "email"]
                      },
                      "role": {
                        "type": "string",
                        "enum": ["admin", "member"]
                      },
                      "joinedAt": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "required": ["user", "role", "joinedAt"]
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/experiments/{id}/members/batch": {
      "post": {
        "description": "Adds multiple members to the experiment with specified roles",
        "summary": "Add multiple experiment members",
        "tags": ["experiments"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the experiment"
          }
        ],
        "operationId": "experiments.addExperimentMembers",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "ID of the user to add as a member"
                        },
                        "role": {
                          "default": "member",
                          "type": "string",
                          "enum": ["admin", "member"],
                          "description": "Role to assign to the new member"
                        }
                      },
                      "required": ["userId"]
                    }
                  }
                },
                "required": ["members"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "name": {
                            "type": "string",
                            "nullable": true
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "nullable": true
                          }
                        },
                        "required": ["id", "name", "email"]
                      },
                      "role": {
                        "type": "string",
                        "enum": ["admin", "member"]
                      },
                      "joinedAt": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "required": ["user", "role", "joinedAt"]
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/experiments/{id}/members/{memberId}": {
      "delete": {
        "description": "Removes a member from the experiment",
        "summary": "Remove experiment member",
        "tags": ["experiments"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the experiment"
          },
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the member"
          }
        ],
        "operationId": "experiments.removeExperimentMember",
        "responses": {
          "204": {
            "description": "204"
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/experiments/{id}/data": {
      "get": {
        "description": "Retrieves data tables from the experiment with pagination support",
        "summary": "Get experiment data",
        "tags": ["experiments"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the experiment"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "content": {
              "application/json": {
                "schema": {
                  "default": 1,
                  "type": "integer",
                  "minimum": 1
                }
              }
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of rows per page",
            "content": {
              "application/json": {
                "schema": {
                  "default": 5,
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 100
                }
              }
            }
          },
          {
            "name": "tableName",
            "in": "query",
            "description": "Optional table name to filter results to a specific table",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "operationId": "experiments.getExperimentData",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the table"
                      },
                      "catalog_name": {
                        "type": "string",
                        "description": "Catalog name"
                      },
                      "schema_name": {
                        "type": "string",
                        "description": "Schema name"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "columns": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "type_name": {
                                  "type": "string"
                                },
                                "type_text": {
                                  "type": "string"
                                }
                              },
                              "required": ["name", "type_name", "type_text"]
                            }
                          },
                          "rows": {
                            "type": "array",
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "nullable": true
                              }
                            }
                          },
                          "totalRows": {
                            "type": "integer"
                          },
                          "truncated": {
                            "type": "boolean"
                          }
                        },
                        "required": ["columns", "rows", "totalRows", "truncated"]
                      },
                      "page": {
                        "type": "integer"
                      },
                      "pageSize": {
                        "type": "integer"
                      },
                      "totalPages": {
                        "type": "integer"
                      },
                      "totalRows": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "name",
                      "catalog_name",
                      "schema_name",
                      "page",
                      "pageSize",
                      "totalPages",
                      "totalRows"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/protocols": {
      "get": {
        "description": "Returns a list of protocols based on the specified filter criteria",
        "summary": "List protocols",
        "tags": ["protocols"],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "operationId": "protocols.listProtocols",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string",
                        "nullable": true
                      },
                      "code": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {}
                        }
                      },
                      "createdBy": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "description",
                      "code",
                      "createdBy",
                      "createdAt",
                      "updatedAt"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    }
                  },
                  "required": ["message", "statusCode"]
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new protocol with the given properties",
        "summary": "Create a new protocol",
        "tags": ["protocols"],
        "parameters": [],
        "operationId": "protocols.createProtocol",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "description": {
                    "type": "string"
                  },
                  "code": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": {}
                    }
                  }
                },
                "required": ["name", "code"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "code": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "createdBy": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "description",
                    "code",
                    "createdBy",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    }
                  },
                  "required": ["message", "statusCode"]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/protocols/{id}": {
      "get": {
        "description": "Returns a protocol by its ID",
        "summary": "Get protocol by ID",
        "tags": ["protocols"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "operationId": "protocols.getProtocol",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "code": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "createdBy": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "description",
                    "code",
                    "createdBy",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    }
                  },
                  "required": ["message", "statusCode"]
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Updates a protocol with the given properties",
        "summary": "Update a protocol",
        "tags": ["protocols"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "operationId": "protocols.updateProtocol",
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "code": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": {}
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "code": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "createdBy": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "description",
                    "code",
                    "createdBy",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    }
                  },
                  "required": ["message", "statusCode"]
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    }
                  },
                  "required": ["message", "statusCode"]
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a protocol by its ID",
        "summary": "Delete a protocol",
        "tags": ["protocols"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "operationId": "protocols.deleteProtocol",
        "responses": {
          "204": {
            "description": "204"
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    }
                  },
                  "required": ["message", "statusCode"]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/search": {
      "get": {
        "description": "Search for users by name or email with pagination support",
        "summary": "Search users",
        "tags": ["users"],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Search query for name or email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of users to return",
            "content": {
              "application/json": {
                "schema": {
                  "default": 50,
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 100
                }
              }
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of users to skip for pagination",
            "content": {
              "application/json": {
                "schema": {
                  "default": 0,
                  "type": "integer",
                  "minimum": 0,
                  "nullable": true
                }
              }
            }
          }
        ],
        "operationId": "users.searchUsers",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "name": {
                        "type": "string",
                        "nullable": true
                      },
                      "email": {
                        "type": "string",
                        "format": "email",
                        "nullable": true
                      },
                      "emailVerified": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                      },
                      "image": {
                        "type": "string",
                        "nullable": true
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "required": ["id", "name", "email", "emailVerified", "image", "createdAt"]
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "description": "Returns a single user by their unique identifier",
        "summary": "Get a user by ID",
        "tags": ["users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the user"
          }
        ],
        "operationId": "users.getUser",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "nullable": true
                    },
                    "emailVerified": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "image": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": ["id", "name", "email", "emailVerified", "image", "createdAt"]
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    }
  },
  "info": {
    "title": "OpenJII API",
    "version": "1.0.0",
    "description": "REST API documentation for the OpenJII platform"
  },
  "servers": [
    {
      "url": "http://localhost:3020",
      "description": "Local development"
    }
  ]
}
